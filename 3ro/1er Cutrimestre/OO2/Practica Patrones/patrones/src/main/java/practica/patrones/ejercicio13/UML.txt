@startuml

class Client <<client>>{
+ buildClasico(): Sandwiche
+ buildVegetariano(): Sandwiche
+ buildVegano(): Sandwiche
+ buildSinTACC(): Sandwiche
}

class Director <<director>>{
+ <<create>> Director(builder: Builder): Sandwiche
+ build(): Sandwiche
}

abstract class Builder{
+ build(): Sandwiche
# <<abstract>> buildPincipal()
# <<abstract>> buildBread()
# <<abstract>> buildSeasoning()
# <<abstract>> buildAdditional()
}

class BuilderClasico <<concretBuilder>>{
}
class BuilderVegetariano <<concretBuilder>>{
}
class BuilderVegano <<concretBuilder>>{
}
class BuilderSinTACC <<concretBuilder>>{
}

class Sandwiche <<product>>{
+ addComponent(component: Component)
+ cost(): double
}

class Component {
- name: string
- cost: double
+ <<create>> Component(name: string, cost: double)
+ cost(): double
}

Client --> Director: - director
Director --> Builder: - builder

Builder <|-- BuilderClasico
Builder <|-- BuilderVegetariano
Builder <|-- BuilderVegano
Builder <|-- BuilderSinTACC

Sandwiche --> Component: - components*

@enduml